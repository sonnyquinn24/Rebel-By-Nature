name: Continuous Integration

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'docker-compose*.yml'
      - '.github/workflows/**'

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd src
          pip install -r requirements.txt
          pip install pytest

      - name: Run comprehensive tests
        run: |
          python -m pytest test_deployment.py -v

      - name: Test FastAPI application
        run: |
          cd src
          python -c "
          import app
          print('✅ FastAPI app imports successfully')
          print('✅ Database initialization complete')
          "

      - name: Test health endpoint
        run: |
          cd src
          python -m uvicorn app:app --port 8000 --host 0.0.0.0 &
          sleep 10
          curl -f http://localhost:8000/health || exit 1
          echo "✅ Health check passed"
          curl -f http://localhost:8000/ || exit 1
          echo "✅ Root endpoint accessible"
          pkill -f uvicorn

      - name: Validate static files
        run: |
          cd src/static
          [ -f "index.html" ] && echo "✅ index.html exists" || exit 1
          [ -f "styles.css" ] && echo "✅ styles.css exists" || exit 1
          [ -f "app.js" ] && echo "✅ app.js exists" || exit 1

  docker:
    name: Test Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: mergington-high:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker container
        run: |
          docker run -d --name test-app -p 8000:8000 mergington-high:test
          sleep 30
          curl -f http://localhost:8000/health || exit 1
          echo "✅ Docker container health check passed"
          docker stop test-app
          docker rm test-app

  validate-compose:
    name: Validate Docker Compose
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate docker-compose.yml
        run: |
          docker-compose config -q
          echo "✅ docker-compose.yml is valid"

      - name: Validate production override
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.prod.yml config -q
          echo "✅ Production configuration is valid"